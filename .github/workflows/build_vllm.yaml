name: Build vllm wheel on Power

on:
  workflow_dispatch:
    inputs:
      release:
        required: true
        type: string
  workflow_call:
    inputs:
      release:
        required: true
        type: string

permissions:
  actions: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "linux/ppc64le"

      - name: Install
        id: install
        run: >-
          docker run --rm --platform "linux/ppc64le"
          --mount "type=bind,src=$(pwd),dst=/build"
          -w "/build" ppc64le/almalinux /bin/bash -ec '
          export PATH="/root/micromamba/lib/python3.11/site-packages:/root/micromamba/bin:/opt/rh/gcc-toolset-12/root/usr/bin:/usr/local/cargo/bin:$PATH";
          dnf update -y;
          dnf group install -y "Development Tools";
          dnf install --allowerasing -y git wget curl vim gcc-toolset-12 bzip2 openssl-devel;

          curl -Ls https://micro.mamba.pm/api/micromamba/linux-ppc64le/latest | tar -xvj bin/micromamba && mv bin/micromamba /usr/bin/;

          micromamba install -y --root-prefix=~/micromamba --prefix=~/micromamba -c rocketce -c defaults python=3.11 pytorch-cpu torchvision-cpu rust httptools && micromamba clean --all --yes;

          python -m pip install -v --prefer-binary --extra-index-url https://repo.fury.io/mgiessing \
            "cmake>=3.26";

          git clone -b v21.12 --recursive https://github.com/protocolbuffers/protobuf.git && cd protobuf;
          mkdir build_source && cd build_source;
          cmake ../cmake  -DCMAKE_INSTALL_LIBDIR=lib64 -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=${HOME}/protbuf -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release;
          make -j$(nproc) && make install;
          
          cd ../../;
          git clone https://github.com/vllm-project/vllm.git && cd vllm;

          python -m pip install -v --prefer-binary --extra-index-url https://repo.fury.io/mgiessing \
            ninja packaging "setuptools-scm>=8" setuptools wheel jinja2 \
            -r requirements-cpu.txt \
            uvloop==0.20.0;
          
          # GitHub Actions QEMU detects AVX2 ISA instead of power
          sed -i "s/list\(APPEND CXX_COMPILE_FLAGS \"-mavx2\"\)$/list(APPEND CXX_COMPILE_FLAGS \"-mvsx -mcpu=native -mtune=native\")/g" cmake/cpu_extension.cmake;

          CMAKE_PREFIX_PATH=${HOME}/protbuf/lib64/cmake/protobuf VLLM_TARGET_DEVICE=cpu python setup.py install;

          WHEEL_PATH=$(find ~/micromamba/lib/python3.11/site-packages -name "vllm*.whl");
          cp $WHEEL_PATH /build/;'          

      - name: Create a tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git tag ${{ inputs.release }}
          git push origin ${{ inputs.release }} -f

      - name: Capture the file
        id: capture
        run: |
          WHEEL_PATH=$(find $PWD -name "vllm*.whl")
          echo "Found $WHEEL_PATH"
          echo "ARTIFACT=$WHEEL_PATH" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.release }}
          tag_name: ${{ inputs.release }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ steps.capture.outputs.ARTIFACT }}
          draft: false
          prerelease: false
